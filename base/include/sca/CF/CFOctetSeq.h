// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.
#ifndef __CFOctetSeq_hh__
#define __CFOctetSeq_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_CFOctetSeq
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_CFOctetSeq
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_CFOctetSeq
#endif



#ifndef __CFPrimitiveTypes_hh_EXTERNAL_GUARD__
#define __CFPrimitiveTypes_hh_EXTERNAL_GUARD__
#include <CFPrimitiveTypes.h>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif



_CORBA_MODULE CF

_CORBA_MODULE_BEG

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_OctetSeq;

  class OctetSeq_var;

  class OctetSeq : public _CORBA_Unbounded_Sequence_Octet {
  public:
    typedef OctetSeq_var _var_type;
    inline OctetSeq() {}
    inline OctetSeq(const OctetSeq& _s)
      : _CORBA_Unbounded_Sequence_Octet(_s) {}

    inline OctetSeq(_CORBA_ULong _max)
      : _CORBA_Unbounded_Sequence_Octet(_max) {}
    inline OctetSeq(_CORBA_ULong _max, _CORBA_ULong _len, OctetType* _val, _CORBA_Boolean _rel=0)
      : _CORBA_Unbounded_Sequence_Octet(_max, _len, _val, _rel) {}

  

    inline OctetSeq& operator = (const OctetSeq& _s) {
      _CORBA_Unbounded_Sequence_Octet::operator=(_s);
      return *this;
    }
  };

  class OctetSeq_out;

  class OctetSeq_var {
  public:
    inline OctetSeq_var() : _pd_seq(0) {}
    inline OctetSeq_var(OctetSeq* _s) : _pd_seq(_s) {}
    inline OctetSeq_var(const OctetSeq_var& _s) {
      if (_s._pd_seq)  _pd_seq = new OctetSeq(*_s._pd_seq);
      else             _pd_seq = 0;
    }
    inline ~OctetSeq_var() { if (_pd_seq)  delete _pd_seq; }
      
    inline OctetSeq_var& operator = (OctetSeq* _s) {
      if (_pd_seq)  delete _pd_seq;
      _pd_seq = _s;
      return *this;
    }
    inline OctetSeq_var& operator = (const OctetSeq_var& _s) {
      if (_s._pd_seq) {
        if (!_pd_seq)  _pd_seq = new OctetSeq;
        *_pd_seq = *_s._pd_seq;
      } else if (_pd_seq) {
        delete _pd_seq;
        _pd_seq = 0;
      }
      return *this;
    }
    inline OctetType& operator [] (_CORBA_ULong _s) {
      return (*_pd_seq)[_s];
    }

  

    inline OctetSeq* operator -> () { return _pd_seq; }
    inline const OctetSeq* operator -> () const { return _pd_seq; }
#if defined(__GNUG__)
    inline operator OctetSeq& () const { return *_pd_seq; }
#else
    inline operator const OctetSeq& () const { return *_pd_seq; }
    inline operator OctetSeq& () { return *_pd_seq; }
#endif
      
    inline const OctetSeq& in() const { return *_pd_seq; }
    inline OctetSeq&       inout()    { return *_pd_seq; }
    inline OctetSeq*&      out() {
      if (_pd_seq) { delete _pd_seq; _pd_seq = 0; }
      return _pd_seq;
    }
    inline OctetSeq* _retn() { OctetSeq* tmp = _pd_seq; _pd_seq = 0; return tmp; }
      
    friend class OctetSeq_out;
    
  private:
    OctetSeq* _pd_seq;
  };

  class OctetSeq_out {
  public:
    inline OctetSeq_out(OctetSeq*& _s) : _data(_s) { _data = 0; }
    inline OctetSeq_out(OctetSeq_var& _s)
      : _data(_s._pd_seq) { _s = (OctetSeq*) 0; }
    inline OctetSeq_out(const OctetSeq_out& _s) : _data(_s._data) {}
    inline OctetSeq_out& operator = (const OctetSeq_out& _s) {
      _data = _s._data;
      return *this;
    }
    inline OctetSeq_out& operator = (OctetSeq* _s) {
      _data = _s;
      return *this;
    }
    inline operator OctetSeq*&()  { return _data; }
    inline OctetSeq*& ptr()       { return _data; }
    inline OctetSeq* operator->() { return _data; }

    inline OctetType& operator [] (_CORBA_ULong _i) {
      return (*_data)[_i];
    }

  

    OctetSeq*& _data;

  private:
    OctetSeq_out();
    OctetSeq_out& operator=(const OctetSeq_var&);
  };

_CORBA_MODULE_END



_CORBA_MODULE POA_CF
_CORBA_MODULE_BEG

_CORBA_MODULE_END



_CORBA_MODULE OBV_CF
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

void operator<<=(::CORBA::Any& _a, const CF::OctetSeq& _s);
void operator<<=(::CORBA::Any& _a, CF::OctetSeq* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, CF::OctetSeq*& _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const CF::OctetSeq*& _sp);





#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_CFOctetSeq
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_CFOctetSeq
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_CFOctetSeq
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_CFOctetSeq
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_CFOctetSeq
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_CFOctetSeq
#endif

#endif  // __CFOctetSeq_hh__

