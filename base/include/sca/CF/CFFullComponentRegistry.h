// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.
#ifndef __CFFullComponentRegistry_hh__
#define __CFFullComponentRegistry_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_CFFullComponentRegistry
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_CFFullComponentRegistry
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_CFFullComponentRegistry
#endif



#ifndef __CFPrimitiveTypes_hh_EXTERNAL_GUARD__
#define __CFPrimitiveTypes_hh_EXTERNAL_GUARD__
#include <CFPrimitiveTypes.h>
#endif
#ifndef __CFULongLongSeq_hh_EXTERNAL_GUARD__
#define __CFULongLongSeq_hh_EXTERNAL_GUARD__
#include <CFULongLongSeq.h>
#endif
#ifndef __CFBooleanSeq_hh_EXTERNAL_GUARD__
#define __CFBooleanSeq_hh_EXTERNAL_GUARD__
#include <CFBooleanSeq.h>
#endif
#ifndef __CFULongSeq_hh_EXTERNAL_GUARD__
#define __CFULongSeq_hh_EXTERNAL_GUARD__
#include <CFULongSeq.h>
#endif
#ifndef __CFLongLongSeq_hh_EXTERNAL_GUARD__
#define __CFLongLongSeq_hh_EXTERNAL_GUARD__
#include <CFLongLongSeq.h>
#endif
#ifndef __CFCharSeq_hh_EXTERNAL_GUARD__
#define __CFCharSeq_hh_EXTERNAL_GUARD__
#include <CFCharSeq.h>
#endif
#ifndef __CFUShortSeq_hh_EXTERNAL_GUARD__
#define __CFUShortSeq_hh_EXTERNAL_GUARD__
#include <CFUShortSeq.h>
#endif
#ifndef __CFLongSeq_hh_EXTERNAL_GUARD__
#define __CFLongSeq_hh_EXTERNAL_GUARD__
#include <CFLongSeq.h>
#endif
#ifndef __CFDoubleSeq_hh_EXTERNAL_GUARD__
#define __CFDoubleSeq_hh_EXTERNAL_GUARD__
#include <CFDoubleSeq.h>
#endif
#ifndef __CFShortSeq_hh_EXTERNAL_GUARD__
#define __CFShortSeq_hh_EXTERNAL_GUARD__
#include <CFShortSeq.h>
#endif
#ifndef __CFFloatSeq_hh_EXTERNAL_GUARD__
#define __CFFloatSeq_hh_EXTERNAL_GUARD__
#include <CFFloatSeq.h>
#endif
#ifndef __CFOctetSeq_hh_EXTERNAL_GUARD__
#define __CFOctetSeq_hh_EXTERNAL_GUARD__
#include <CFOctetSeq.h>
#endif
#ifndef __CFStringSeq_hh_EXTERNAL_GUARD__
#define __CFStringSeq_hh_EXTERNAL_GUARD__
#include <CFStringSeq.h>
#endif
#ifndef __CFProperties_hh_EXTERNAL_GUARD__
#define __CFProperties_hh_EXTERNAL_GUARD__
#include <CFProperties.h>
#endif
#ifndef __CFCommonTypes_hh_EXTERNAL_GUARD__
#define __CFCommonTypes_hh_EXTERNAL_GUARD__
#include <CFCommonTypes.h>
#endif
#ifndef __CFComponentRegistry_hh_EXTERNAL_GUARD__
#define __CFComponentRegistry_hh_EXTERNAL_GUARD__
#include <CFComponentRegistry.h>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif



_CORBA_MODULE CF

_CORBA_MODULE_BEG

#ifndef __CF_mFullComponentRegistry__
#define __CF_mFullComponentRegistry__
  class FullComponentRegistry;
  class _objref_FullComponentRegistry;
  class _impl_FullComponentRegistry;
  
  typedef _objref_FullComponentRegistry* FullComponentRegistry_ptr;
  typedef FullComponentRegistry_ptr FullComponentRegistryRef;

  class FullComponentRegistry_Helper {
  public:
    typedef FullComponentRegistry_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_FullComponentRegistry, FullComponentRegistry_Helper> FullComponentRegistry_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_FullComponentRegistry,FullComponentRegistry_Helper > FullComponentRegistry_out;

#endif

  // interface FullComponentRegistry
  class FullComponentRegistry {
  public:
    // Declarations for this interface type.
    typedef FullComponentRegistry_ptr _ptr_type;
    typedef FullComponentRegistry_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static inline _ptr_type _fromObjRef(omniObjRef* o) {
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    class UnregisterError : public ::CORBA::UserException {
    public:
      
      ErrorNumberType errorNumber;

      ::CORBA::String_member msg;

    

      inline UnregisterError() {
        pd_insertToAnyFn    = insertToAnyFn;
        pd_insertToAnyFnNCP = insertToAnyFnNCP;
      }
      UnregisterError(const UnregisterError&);
      UnregisterError(ErrorNumberType i_errorNumber, const char* i_msg);
      UnregisterError& operator=(const UnregisterError&);
      virtual ~UnregisterError();
      virtual void _raise() const;
      static UnregisterError* _downcast(::CORBA::Exception*);
      static const UnregisterError* _downcast(const ::CORBA::Exception*);
      static inline UnregisterError* _narrow(::CORBA::Exception* _e) {
        return _downcast(_e);
      }
      
      void operator>>=(cdrStream&) const ;
      void operator<<=(cdrStream&) ;

      static _core_attr insertExceptionToAny    insertToAnyFn;
      static _core_attr insertExceptionToAnyNCP insertToAnyFnNCP;

      virtual ::CORBA::Exception* _NP_duplicate() const;

      static _core_attr const char* _PD_repoId;
      static _core_attr const char* _PD_typeId;

    private:
      virtual const char* _NP_typeId() const;
      virtual const char* _NP_repoId(int*) const;
      virtual void _NP_marshal(cdrStream&) const;
    };

    static _dyn_attr const ::CORBA::TypeCode_ptr _tc_UnregisterError;

  
  };

  class _objref_FullComponentRegistry :
    public virtual _objref_ComponentRegistry
  {
  public:
    // IDL operations
    void unregisterComponent(const char* identifier);

    // Constructors
    inline _objref_FullComponentRegistry()  { _PR_setobj(0); }  // nil
    _objref_FullComponentRegistry(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_FullComponentRegistry();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_FullComponentRegistry(const _objref_FullComponentRegistry&);
    _objref_FullComponentRegistry& operator = (const _objref_FullComponentRegistry&);
    // not implemented

    friend class FullComponentRegistry;
  };

  class _pof_FullComponentRegistry : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_FullComponentRegistry() : _OMNI_NS(proxyObjectFactory)(FullComponentRegistry::_PD_repoId) {}
    virtual ~_pof_FullComponentRegistry();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_FullComponentRegistry :
    public virtual _impl_ComponentRegistry
  {
  public:
    virtual ~_impl_FullComponentRegistry();

    virtual void unregisterComponent(const char* identifier) = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_FullComponentRegistry;

_CORBA_MODULE_END



_CORBA_MODULE POA_CF
_CORBA_MODULE_BEG

  class FullComponentRegistry :
    public virtual CF::_impl_FullComponentRegistry,
    public virtual ComponentRegistry
  {
  public:
    virtual ~FullComponentRegistry();

    inline ::CF::FullComponentRegistry_ptr _this() {
      return (::CF::FullComponentRegistry_ptr) _do_this(::CF::FullComponentRegistry::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_CF
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

void operator<<=(::CORBA::Any& _a, const CF::FullComponentRegistry::UnregisterError& _s);
void operator<<=(::CORBA::Any& _a, const CF::FullComponentRegistry::UnregisterError* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const CF::FullComponentRegistry::UnregisterError*& _sp);

void operator<<=(::CORBA::Any& _a, CF::FullComponentRegistry_ptr _s);
void operator<<=(::CORBA::Any& _a, CF::FullComponentRegistry_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, CF::FullComponentRegistry_ptr& _s);



inline void
CF::FullComponentRegistry::_marshalObjRef(::CF::FullComponentRegistry_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}



#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_CFFullComponentRegistry
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_CFFullComponentRegistry
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_CFFullComponentRegistry
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_CFFullComponentRegistry
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_CFFullComponentRegistry
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_CFFullComponentRegistry
#endif

#endif  // __CFFullComponentRegistry_hh__

