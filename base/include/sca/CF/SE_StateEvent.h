// This file is generated by omniidl (C++ backend)- omniORB_4_2. Do not edit.
#ifndef __SE__StateEvent_hh__
#define __SE__StateEvent_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_SE__StateEvent
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_SE__StateEvent
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_SE__StateEvent
#endif






#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif



_CORBA_MODULE StandardEvent

_CORBA_MODULE_BEG

  enum StateChangeCategoryType { ADMINISTRATIVE_STATE_EVENT, OPERATIONAL_STATE_EVENT, USAGE_STATE_EVENT /*, __max_StateChangeCategoryType=0xffffffff */ };
  typedef StateChangeCategoryType& StateChangeCategoryType_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_StateChangeCategoryType;

  enum StateChangeType { LOCKED, UNLOCKED, SHUTTING_DOWN, ENABLED, DISABLED, IDLE, ACTIVE, BUSY /*, __max_StateChangeType=0xffffffff */ };
  typedef StateChangeType& StateChangeType_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_StateChangeType;

  struct StateChangeEventType {
    typedef _CORBA_ConstrType_Variable_Var<StateChangeEventType> _var_type;

    
    ::CORBA::String_member producerId;

    ::CORBA::String_member sourceId;

    StateChangeCategoryType stateChangeCategory;

    StateChangeType stateChangeFrom;

    StateChangeType stateChangeTo;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef StateChangeEventType::_var_type StateChangeEventType_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< StateChangeEventType,StateChangeEventType_var > StateChangeEventType_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_StateChangeEventType;

_CORBA_MODULE_END



_CORBA_MODULE POA_StandardEvent
_CORBA_MODULE_BEG

_CORBA_MODULE_END



_CORBA_MODULE OBV_StandardEvent
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

inline void operator >>=(StandardEvent::StateChangeCategoryType _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (StandardEvent::StateChangeCategoryType& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= StandardEvent::USAGE_STATE_EVENT) {
    _e = (StandardEvent::StateChangeCategoryType) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, StandardEvent::StateChangeCategoryType _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, StandardEvent::StateChangeCategoryType& _s);

inline void operator >>=(StandardEvent::StateChangeType _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (StandardEvent::StateChangeType& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= StandardEvent::BUSY) {
    _e = (StandardEvent::StateChangeType) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, StandardEvent::StateChangeType _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, StandardEvent::StateChangeType& _s);

extern void operator<<=(::CORBA::Any& _a, const StandardEvent::StateChangeEventType& _s);
extern void operator<<=(::CORBA::Any& _a, StandardEvent::StateChangeEventType* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, StandardEvent::StateChangeEventType*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const StandardEvent::StateChangeEventType*& _sp);





#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_SE__StateEvent
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_SE__StateEvent
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_SE__StateEvent
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_SE__StateEvent
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_SE__StateEvent
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_SE__StateEvent
#endif

#endif  // __SE__StateEvent_hh__

